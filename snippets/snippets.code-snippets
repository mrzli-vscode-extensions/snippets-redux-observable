{
  "Redux-observable action with payload": {
    "scope": "typescript,typescriptreact",
    "prefix": "gmroa",
    "description": "Simple redux-observable action, has payload.",
    "body": [
      "export const ACTION_TYPE_${2:ACTION_NAME} = '${1:ActionName}';",
      "export type ActionType${1:ActionName} = typeof ACTION_TYPE_${2:ACTION_NAME};",
      "export type Action${1:ActionName} = AppActionBase<ActionType${1:ActionName}, ${3:Payload}>;",
      "",
      "export function action${1:ActionName}(payload: ${3:Payload}): Action${1:ActionName} {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}, payload };",
      "}"
    ]
  },
  "Redux-observable action without payload": {
    "scope": "typescript,typescriptreact",
    "prefix": "gmroau",
    "description": "Simple redux-observable action, no payload.",
    "body": [
      "export const ACTION_TYPE_${2:ACTION_NAME} = '${1:ActionName}';",
      "export type ActionType${1:ActionName} = typeof ACTION_TYPE_${2:ACTION_NAME};",
      "export type Action${1:ActionName} = AppActionBase<ActionType${1:ActionName}, undefined>;",
      "",
      "export function action${1:ActionName}(): Action${1:ActionName} {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}, payload: undefined };",
      "}"
    ]
  },
  "Redux-observable 4-action ee": {
    "scope": "typescript,typescriptreact",
    "prefix": "gmroa4ee",
    "description": "Redux-observable action 4-set for api request, has payload input, has payload for fulfilled (ee).",
    "body": [
      "export const ACTION_TYPE_${2:ACTION_NAME} = '${1:ActionName}';",
      "export type ActionType${1:ActionName} = typeof ACTION_TYPE_${2:ACTION_NAME};",
      "export type Action${1:ActionName} = AppActionBase<ActionType${1:ActionName}, ${3:Payload}>;",
      "",
      "export function action${1:ActionName}(payload: ${3:Payload}): Action${1:ActionName} {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}, payload };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_PENDING = '${1:ActionName}Pending';",
      "export type ActionType${1:ActionName}Pending = typeof ACTION_TYPE_${2:ACTION_NAME}_PENDING;",
      "export type Action${1:ActionName}Pending = AppActionBase<ActionType${1:ActionName}Pending, undefined>;",
      "",
      "export function action${1:ActionName}Pending(): Action${1:ActionName}Pending {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_PENDING, payload: undefined };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_FULFILLED = '${1:ActionName}Fulfilled';",
      "export type ActionType${1:ActionName}Fulfilled = typeof ACTION_TYPE_${2:ACTION_NAME}_FULFILLED;",
      "export type Action${1:ActionName}Fulfilled = AppActionBase<ActionType${1:ActionName}Fulfilled, ${4:Payload}>;",
      "",
      "export function action${1:ActionName}Fulfilled(payload: ${4:Payload}): Action${1:ActionName}Fulfilled {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_FULFILLED, payload };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_REJECTED = '${1:ActionName}Rejected';",
      "export type ActionType${1:ActionName}Rejected = typeof ACTION_TYPE_${2:ACTION_NAME}_REJECTED;",
      "export type Action${1:ActionName}Rejected = AppActionBase<ActionType${1:ActionName}Rejected, undefined>;",
      "",
      "export function action${1:ActionName}Rejected(): Action${1:ActionName}Rejected {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_REJECTED, payload: undefined };",
      "}"
    ]
  },
  "Redux-observable 4-action eu": {
    "scope": "typescript,typescriptreact",
    "prefix": "gmroa4eu",
    "description": "Redux-observable action 4-set for api request, has payload input, no payload for fulfilled (eu).",
    "body": [
      "export const ACTION_TYPE_${2:ACTION_NAME} = '${1:ActionName}';",
      "export type ActionType${1:ActionName} = typeof ACTION_TYPE_${2:ACTION_NAME};",
      "export type Action${1:ActionName} = AppActionBase<ActionType${1:ActionName}, ${3:Payload}>;",
      "",
      "export function action${1:ActionName}(payload: ${3:Payload}): Action${1:ActionName} {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}, payload };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_PENDING = '${1:ActionName}Pending';",
      "export type ActionType${1:ActionName}Pending = typeof ACTION_TYPE_${2:ACTION_NAME}_PENDING;",
      "export type Action${1:ActionName}Pending = AppActionBase<ActionType${1:ActionName}Pending, undefined>;",
      "",
      "export function action${1:ActionName}Pending(): Action${1:ActionName}Pending {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_PENDING, payload: undefined };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_FULFILLED = '${1:ActionName}Fulfilled';",
      "export type ActionType${1:ActionName}Fulfilled = typeof ACTION_TYPE_${2:ACTION_NAME}_FULFILLED;",
      "export type Action${1:ActionName}Fulfilled = AppActionBase<ActionType${1:ActionName}Fulfilled, undefined>;",
      "",
      "export function action${1:ActionName}Fulfilled(): Action${1:ActionName}Fulfilled {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_FULFILLED, payload: undefined };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_REJECTED = '${1:ActionName}Rejected';",
      "export type ActionType${1:ActionName}Rejected = typeof ACTION_TYPE_${2:ACTION_NAME}_REJECTED;",
      "export type Action${1:ActionName}Rejected = AppActionBase<ActionType${1:ActionName}Rejected, undefined>;",
      "",
      "export function action${1:ActionName}Rejected(): Action${1:ActionName}Rejected {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_REJECTED, payload: undefined };",
      "}"
    ]
  },
  "Redux-observable 4-action ue": {
    "scope": "typescript,typescriptreact",
    "prefix": "gmroa4ue",
    "description": "Redux-observable action 4-set for api request, no payload input, has payload for fulfilled (ue).",
    "body": [
      "export const ACTION_TYPE_${2:ACTION_NAME} = '${1:ActionName}';",
      "export type ActionType${1:ActionName} = typeof ACTION_TYPE_${2:ACTION_NAME};",
      "export type Action${1:ActionName} = AppActionBase<ActionType${1:ActionName}, undefined>;",
      "",
      "export function action${1:ActionName}(): Action${1:ActionName} {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}, payload: undefined };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_PENDING = '${1:ActionName}Pending';",
      "export type ActionType${1:ActionName}Pending = typeof ACTION_TYPE_${2:ACTION_NAME}_PENDING;",
      "export type Action${1:ActionName}Pending = AppActionBase<ActionType${1:ActionName}Pending, undefined>;",
      "",
      "export function action${1:ActionName}Pending(): Action${1:ActionName}Pending {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_PENDING, payload: undefined };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_FULFILLED = '${1:ActionName}Fulfilled';",
      "export type ActionType${1:ActionName}Fulfilled = typeof ACTION_TYPE_${2:ACTION_NAME}_FULFILLED;",
      "export type Action${1:ActionName}Fulfilled = AppActionBase<ActionType${1:ActionName}Fulfilled, ${4:Payload}>;",
      "",
      "export function action${1:ActionName}Fulfilled(payload: ${4:Payload}): Action${1:ActionName}Fulfilled {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_FULFILLED, payload };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_REJECTED = '${1:ActionName}Rejected';",
      "export type ActionType${1:ActionName}Rejected = typeof ACTION_TYPE_${2:ACTION_NAME}_REJECTED;",
      "export type Action${1:ActionName}Rejected = AppActionBase<ActionType${1:ActionName}Rejected, undefined>;",
      "",
      "export function action${1:ActionName}Rejected(): Action${1:ActionName}Rejected {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_REJECTED, payload: undefined };",
      "}"
    ]
  },
  "Redux-observable 4-action uu": {
    "scope": "typescript,typescriptreact",
    "prefix": "gmroa4uu",
    "description": "Redux-observable action 4-set for api request, no payload input, no payload for fulfilled (uu).",
    "body": [
      "export const ACTION_TYPE_${2:ACTION_NAME} = '${1:ActionName}';",
      "export type ActionType${1:ActionName} = typeof ACTION_TYPE_${2:ACTION_NAME};",
      "export type Action${1:ActionName} = AppActionBase<ActionType${1:ActionName}, undefined>;",
      "",
      "export function action${1:ActionName}(): Action${1:ActionName} {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}, payload: undefined };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_PENDING = '${1:ActionName}Pending';",
      "export type ActionType${1:ActionName}Pending = typeof ACTION_TYPE_${2:ACTION_NAME}_PENDING;",
      "export type Action${1:ActionName}Pending = AppActionBase<ActionType${1:ActionName}Pending, undefined>;",
      "",
      "export function action${1:ActionName}Pending(): Action${1:ActionName}Pending {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_PENDING, payload: undefined };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_FULFILLED = '${1:ActionName}Fulfilled';",
      "export type ActionType${1:ActionName}Fulfilled = typeof ACTION_TYPE_${2:ACTION_NAME}_FULFILLED;",
      "export type Action${1:ActionName}Fulfilled = AppActionBase<ActionType${1:ActionName}Fulfilled, undefined>;",
      "",
      "export function action${1:ActionName}Fulfilled(): Action${1:ActionName}Fulfilled {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_FULFILLED, payload: undefined };",
      "}",
      "",
      "export const ACTION_TYPE_${2:ACTION_NAME}_REJECTED = '${1:ActionName}Rejected';",
      "export type ActionType${1:ActionName}Rejected = typeof ACTION_TYPE_${2:ACTION_NAME}_REJECTED;",
      "export type Action${1:ActionName}Rejected = AppActionBase<ActionType${1:ActionName}Rejected, undefined>;",
      "",
      "export function action${1:ActionName}Rejected(): Action${1:ActionName}Rejected {",
      "  return { type: ACTION_TYPE_${2:ACTION_NAME}_REJECTED, payload: undefined };",
      "}"
    ]
  },
  "Redux-observable add action to union": {
    "scope": "typescript,typescriptreact",
    "prefix": "gmroaunion",
    "description": "Redux-observable add actions to union.",
    "body": [
      "| Action${1:ActionName}",
      "| Action${1:ActionName}Pending",
      "| Action${1:ActionName}Fulfilled",
      "| Action${1:ActionName}Rejected"
    ]
  },
  "Redux-observable add action types to union": {
    "scope": "typescript,typescriptreact",
    "prefix": "gmroatunion",
    "description": "Redux-observable add action types to union.",
    "body": [
      "| ActionType${1:ActionName}",
      "| ActionType${1:ActionName}Pending",
      "| ActionType${1:ActionName}Fulfilled",
      "| ActionType${1:ActionName}Rejected"
    ]
  }
}
